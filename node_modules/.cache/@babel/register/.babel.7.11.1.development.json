{
  "{\"sourceRoot\":\"/Users/katiemcdonagh/react/gameOfLife/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/katiemcdonagh/react/gameOfLife\",\"filename\":\"/Users/katiemcdonagh/react/gameOfLife/test/CellState.test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/katiemcdonagh/react/gameOfLife\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/katiemcdonagh/react/gameOfLife",
      "filename": "/Users/katiemcdonagh/react/gameOfLife/test/CellState.test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/katiemcdonagh/react/gameOfLife",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/katiemcdonagh/react/gameOfLife/test/CellState.test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/katiemcdonagh/react/gameOfLife/test/CellState.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/test/",
        "sourceFileName": "CellState.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _CellState = _interopRequireDefault(require(\"../CellState\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\ndescribe(\"CellState\", function () {\n  it(\"allows a CellState to be ALIVE\", function () {\n    (0, _chai.expect)(_CellState[\"default\"].ALIVE).to.equal(1);\n  });\n  it(\"allows a CellState to be DEAD\", function () {\n    (0, _chai.expect)(_CellState[\"default\"].DEAD).to.equal(0);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNlbGxTdGF0ZS50ZXN0LmpzIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwiaXQiLCJDZWxsU3RhdGUiLCJBTElWRSIsInRvIiwiZXF1YWwiLCJERUFEIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBRUFBLFFBQVEsQ0FBQyxXQUFELEVBQWMsWUFBTTtBQUUxQkMsRUFBQUEsRUFBRSxDQUFDLGdDQUFELEVBQWtDLFlBQU87QUFDekMsc0JBQU9DLHNCQUFVQyxLQUFqQixFQUF3QkMsRUFBeEIsQ0FBMkJDLEtBQTNCLENBQWlDLENBQWpDO0FBQ0QsR0FGQyxDQUFGO0FBR0FKLEVBQUFBLEVBQUUsQ0FBQywrQkFBRCxFQUFpQyxZQUFPO0FBQ3hDLHNCQUFPQyxzQkFBVUksSUFBakIsRUFBdUJGLEVBQXZCLENBQTBCQyxLQUExQixDQUFnQyxDQUFoQztBQUNELEdBRkMsQ0FBRjtBQUlELENBVE8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvVXNlcnMva2F0aWVtY2RvbmFnaC9yZWFjdC9nYW1lT2ZMaWZlL3Rlc3QvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXhwZWN0IH0gZnJvbSAnY2hhaSc7XG5pbXBvcnQgQ2VsbFN0YXRlIGZyb20gJy4uL0NlbGxTdGF0ZSdcblxuZGVzY3JpYmUoXCJDZWxsU3RhdGVcIiwgKCkgPT4ge1xuXG4gIGl0KFwiYWxsb3dzIGEgQ2VsbFN0YXRlIHRvIGJlIEFMSVZFXCIsKCkgID0+IHtcbiAgICBleHBlY3QoQ2VsbFN0YXRlLkFMSVZFKS50by5lcXVhbCgxKTtcbiAgfSk7XG4gIGl0KFwiYWxsb3dzIGEgQ2VsbFN0YXRlIHRvIGJlIERFQURcIiwoKSAgPT4ge1xuICAgIGV4cGVjdChDZWxsU3RhdGUuREVBRCkudG8uZXF1YWwoMCk7XG4gIH0pO1xuXG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "CellState.test.js"
      ],
      "names": [
        "describe",
        "it",
        "CellState",
        "ALIVE",
        "to",
        "equal",
        "DEAD"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEAA,QAAQ,CAAC,WAAD,EAAc,YAAM;AAE1BC,EAAAA,EAAE,CAAC,gCAAD,EAAkC,YAAO;AACzC,sBAAOC,sBAAUC,KAAjB,EAAwBC,EAAxB,CAA2BC,KAA3B,CAAiC,CAAjC;AACD,GAFC,CAAF;AAGAJ,EAAAA,EAAE,CAAC,+BAAD,EAAiC,YAAO;AACxC,sBAAOC,sBAAUI,IAAjB,EAAuBF,EAAvB,CAA0BC,KAA1B,CAAgC,CAAhC;AACD,GAFC,CAAF;AAID,CATO,CAAR",
      "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/test/",
      "sourcesContent": [
        "import { expect } from 'chai';\nimport CellState from '../CellState'\n\ndescribe(\"CellState\", () => {\n\n  it(\"allows a CellState to be ALIVE\",()  => {\n    expect(CellState.ALIVE).to.equal(1);\n  });\n  it(\"allows a CellState to be DEAD\",()  => {\n    expect(CellState.DEAD).to.equal(0);\n  });\n\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1597949747954
  },
  "{\"sourceRoot\":\"/Users/katiemcdonagh/react/gameOfLife/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/katiemcdonagh/react/gameOfLife\",\"filename\":\"/Users/katiemcdonagh/react/gameOfLife/CellState.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/katiemcdonagh/react/gameOfLife\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/katiemcdonagh/react/gameOfLife",
      "filename": "/Users/katiemcdonagh/react/gameOfLife/CellState.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/katiemcdonagh/react/gameOfLife",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/katiemcdonagh/react/gameOfLife/CellState.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/katiemcdonagh/react/gameOfLife/CellState.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/",
        "sourceFileName": "CellState.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = {\n  ALIVE: 1,\n  DEAD: 0\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNlbGxTdGF0ZS5qcyJdLCJuYW1lcyI6WyJBTElWRSIsIkRFQUQiXSwibWFwcGluZ3MiOiI7Ozs7OztlQUFlO0FBQ2JBLEVBQUFBLEtBQUssRUFBRSxDQURNO0FBRWJDLEVBQUFBLElBQUksRUFBRTtBQUZPLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2thdGllbWNkb25hZ2gvcmVhY3QvZ2FtZU9mTGlmZS8iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIEFMSVZFOiAxLFxuICBERUFEOiAwLFxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "CellState.js"
      ],
      "names": [
        "ALIVE",
        "DEAD"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,KAAK,EAAE,CADM;AAEbC,EAAAA,IAAI,EAAE;AAFO,C",
      "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/",
      "sourcesContent": [
        "export default {\n  ALIVE: 1,\n  DEAD: 0,\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1597949771618
  },
  "{\"sourceRoot\":\"/Users/katiemcdonagh/react/gameOfLife/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/katiemcdonagh/react/gameOfLife\",\"filename\":\"/Users/katiemcdonagh/react/gameOfLife/test/Cell.test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/katiemcdonagh/react/gameOfLife\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/katiemcdonagh/react/gameOfLife",
      "filename": "/Users/katiemcdonagh/react/gameOfLife/test/Cell.test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/katiemcdonagh/react/gameOfLife",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/katiemcdonagh/react/gameOfLife/test/Cell.test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/katiemcdonagh/react/gameOfLife/test/Cell.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/test/",
        "sourceFileName": "Cell.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _CellState = _interopRequireDefault(require(\"../CellState\"));\n\nvar _Cell = _interopRequireDefault(require(\"../Cell\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\ndescribe(\"Cell\", function () {\n  it(\"is initiated with a cellState\", function () {\n    var aliveCell = new _Cell[\"default\"](_CellState[\"default\"].ALIVE);\n    (0, _chai.expect)(aliveCell.state).to.equal(_CellState[\"default\"].ALIVE);\n    var deadCell = new _Cell[\"default\"](_CellState[\"default\"].DEAD);\n    (0, _chai.expect)(deadCell.state).to.equal(_CellState[\"default\"].DEAD);\n  });\n  it(\"should throw an error if not initialized with a CellState\", function () {\n    (0, _chai.expect)(function () {\n      var cell = new _Cell[\"default\"](undefined);\n    }).to[\"throw\"]();\n  });\n  it(\"should die if it has fewer than 2 live neighbors\", function () {\n    var cell = new _Cell[\"default\"](_CellState[\"default\"].ALIVE);\n    var nextStateWith0Neighbors = cell.getNextState(0);\n    (0, _chai.expect)(nextStateWith0Neighbors).to.equal(_CellState[\"default\"].DEAD);\n    var nextStateWith1Neighbor = cell.getNextState(1);\n    (0, _chai.expect)(nextStateWith1Neighbor).to.equal(_CellState[\"default\"].DEAD);\n  });\n  it(\"should stay dead if it has fewer than 2 neighbors\", function () {\n    var cell = new _Cell[\"default\"](_CellState[\"default\"].DEAD);\n    var nextStateWith0Neighbors = cell.getNextState(0);\n    (0, _chai.expect)(nextStateWith0Neighbors).to.equal(_CellState[\"default\"].DEAD);\n    var nextStateWith1Neighbor = cell.getNextState(1);\n    (0, _chai.expect)(nextStateWith1Neighbor).to.equal(_CellState[\"default\"].DEAD);\n  });\n  it(\"should live with 2 or 3 live neighbors\", function () {\n    var cell = new _Cell[\"default\"](_CellState[\"default\"].ALIVE);\n    var nextStateWith2Neighbors = cell.getNextState(2);\n    (0, _chai.expect)(nextStateWith2Neighbors).to.equal(_CellState[\"default\"].ALIVE);\n    var nextStateWith3Neighbors = cell.getNextState(3);\n    (0, _chai.expect)(nextStateWith3Neighbors).to.equal(_CellState[\"default\"].ALIVE);\n  });\n  it(\"should die with more than 3 neighbors\", function () {\n    var cell = new _Cell[\"default\"](_CellState[\"default\"].ALIVE);\n    var nextStateWith4Neighbors = cell.getNextState(4);\n    (0, _chai.expect)(nextStateWith4Neighbors).to.equal(_CellState[\"default\"].DEAD);\n    var nextStateWith90Neighbors = cell.getNextState(90);\n    (0, _chai.expect)(nextStateWith90Neighbors).to.equal(_CellState[\"default\"].DEAD);\n  });\n  it(\"should stay dead with more than 3 neighbors\", function () {\n    var cell = new _Cell[\"default\"](_CellState[\"default\"].DEAD);\n    var nextStateWith4Neighbors = cell.getNextState(4);\n    (0, _chai.expect)(nextStateWith4Neighbors).to.equal(_CellState[\"default\"].DEAD);\n    var nextStateWith90Neighbors = cell.getNextState(90);\n    (0, _chai.expect)(nextStateWith90Neighbors).to.equal(_CellState[\"default\"].DEAD);\n  });\n  it(\"should come alive with exactly 3 neighbors\", function () {\n    var cell = new _Cell[\"default\"](_CellState[\"default\"].DEAD);\n    var nextStateWith3Neighbors = cell.getNextState(3);\n    (0, _chai.expect)(nextStateWith3Neighbors).to.equal(_CellState[\"default\"].ALIVE);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNlbGwudGVzdC5qcyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiYWxpdmVDZWxsIiwiQ2VsbCIsIkNlbGxTdGF0ZSIsIkFMSVZFIiwic3RhdGUiLCJ0byIsImVxdWFsIiwiZGVhZENlbGwiLCJERUFEIiwiY2VsbCIsInVuZGVmaW5lZCIsIm5leHRTdGF0ZVdpdGgwTmVpZ2hib3JzIiwiZ2V0TmV4dFN0YXRlIiwibmV4dFN0YXRlV2l0aDFOZWlnaGJvciIsIm5leHRTdGF0ZVdpdGgyTmVpZ2hib3JzIiwibmV4dFN0YXRlV2l0aDNOZWlnaGJvcnMiLCJuZXh0U3RhdGVXaXRoNE5laWdoYm9ycyIsIm5leHRTdGF0ZVdpdGg5ME5laWdoYm9ycyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBQSxRQUFRLENBQUMsTUFBRCxFQUFTLFlBQU07QUFDckJDLEVBQUFBLEVBQUUsQ0FBQywrQkFBRCxFQUFrQyxZQUFNO0FBQ3hDLFFBQU1DLFNBQVMsR0FBRyxJQUFJQyxnQkFBSixDQUFTQyxzQkFBVUMsS0FBbkIsQ0FBbEI7QUFDQSxzQkFBT0gsU0FBUyxDQUFDSSxLQUFqQixFQUF3QkMsRUFBeEIsQ0FBMkJDLEtBQTNCLENBQWlDSixzQkFBVUMsS0FBM0M7QUFFQSxRQUFNSSxRQUFRLEdBQUcsSUFBSU4sZ0JBQUosQ0FBU0Msc0JBQVVNLElBQW5CLENBQWpCO0FBQ0Esc0JBQU9ELFFBQVEsQ0FBQ0gsS0FBaEIsRUFBdUJDLEVBQXZCLENBQTBCQyxLQUExQixDQUFnQ0osc0JBQVVNLElBQTFDO0FBQ0QsR0FOQyxDQUFGO0FBUUFULEVBQUFBLEVBQUUsQ0FBQywyREFBRCxFQUE4RCxZQUFNO0FBQ3BFLHNCQUFPLFlBQU07QUFDWCxVQUFNVSxJQUFJLEdBQUcsSUFBSVIsZ0JBQUosQ0FBU1MsU0FBVCxDQUFiO0FBQ0QsS0FGRCxFQUVHTCxFQUZIO0FBR0QsR0FKQyxDQUFGO0FBTUFOLEVBQUFBLEVBQUUsQ0FBQyxrREFBRCxFQUFxRCxZQUFN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QUcsSUFBSVIsZ0JBQUosQ0FBU0Msc0JBQVVNLElBQW5CLENBQWI7QUFDQSxRQUFNTyx1QkFBdUIsR0FBR04sSUFBSSxDQUFDRyxZQUFMLENBQWtCLENBQWxCLENBQWhDO0FBQ0Usc0JBQU9HLHVCQUFQLEVBQWdDVixFQUFoQyxDQUFtQ0MsS0FBbkMsQ0FBeUNKLHNCQUFVQyxLQUFuRDtBQUNILEdBSkMsQ0FBRjtBQUtELENBakVPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2thdGllbWNkb25hZ2gvcmVhY3QvZ2FtZU9mTGlmZS90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4cGVjdCB9IGZyb20gJ2NoYWknO1xuaW1wb3J0IENlbGxTdGF0ZSBmcm9tICcuLi9DZWxsU3RhdGUnO1xuaW1wb3J0IENlbGwgZnJvbSAnLi4vQ2VsbCc7XG5cbmRlc2NyaWJlKFwiQ2VsbFwiLCAoKSA9PiB7XG4gIGl0KFwiaXMgaW5pdGlhdGVkIHdpdGggYSBjZWxsU3RhdGVcIiwgKCkgPT4ge1xuICAgIGNvbnN0IGFsaXZlQ2VsbCA9IG5ldyBDZWxsKENlbGxTdGF0ZS5BTElWRSk7XG4gICAgZXhwZWN0KGFsaXZlQ2VsbC5zdGF0ZSkudG8uZXF1YWwoQ2VsbFN0YXRlLkFMSVZFKVxuXG4gICAgY29uc3QgZGVhZENlbGwgPSBuZXcgQ2VsbChDZWxsU3RhdGUuREVBRClcbiAgICBleHBlY3QoZGVhZENlbGwuc3RhdGUpLnRvLmVxdWFsKENlbGxTdGF0ZS5ERUFEKVxuICB9KTtcblxuICBpdChcInNob3VsZCB0aHJvdyBhbiBlcnJvciBpZiBub3QgaW5pdGlhbGl6ZWQgd2l0aCBhIENlbGxTdGF0ZVwiLCAoKSA9PiB7XG4gICAgZXhwZWN0KCgpID0+IHtcbiAgICAgIGNvbnN0IGNlbGwgPSBuZXcgQ2VsbCh1bmRlZmluZWQpO1xuICAgIH0pLnRvLnRocm93KCk7XG4gIH0pO1xuXG4gIGl0KFwic2hvdWxkIGRpZSBpZiBpdCBoYXMgZmV3ZXIgdGhhbiAyIGxpdmUgbmVpZ2hib3JzXCIsICgpID0+IHtcbiAgICBjb25zdCBjZWxsID0gbmV3IENlbGwoQ2VsbFN0YXRlLkFMSVZFKVxuICAgIGNvbnN0IG5leHRTdGF0ZVdpdGgwTmVpZ2hib3JzID0gY2VsbC5nZXROZXh0U3RhdGUoMClcbiAgICBleHBlY3QobmV4dFN0YXRlV2l0aDBOZWlnaGJvcnMpLnRvLmVxdWFsKENlbGxTdGF0ZS5ERUFEKVxuICAgIFxuICAgIGNvbnN0IG5leHRTdGF0ZVdpdGgxTmVpZ2hib3IgPSBjZWxsLmdldE5leHRTdGF0ZSgxKVxuICAgIGV4cGVjdChuZXh0U3RhdGVXaXRoMU5laWdoYm9yKS50by5lcXVhbChDZWxsU3RhdGUuREVBRClcbiAgfSk7XG5cbiAgaXQoXCJzaG91bGQgc3RheSBkZWFkIGlmIGl0IGhhcyBmZXdlciB0aGFuIDIgbmVpZ2hib3JzXCIsICgpID0+IHtcbiAgICBjb25zdCBjZWxsID0gbmV3IENlbGwoQ2VsbFN0YXRlLkRFQUQpXG4gICAgY29uc3QgbmV4dFN0YXRlV2l0aDBOZWlnaGJvcnMgPSBjZWxsLmdldE5leHRTdGF0ZSgwKVxuICAgIGV4cGVjdChuZXh0U3RhdGVXaXRoME5laWdoYm9ycykudG8uZXF1YWwoQ2VsbFN0YXRlLkRFQUQpXG4gICAgXG4gICAgY29uc3QgbmV4dFN0YXRlV2l0aDFOZWlnaGJvciA9IGNlbGwuZ2V0TmV4dFN0YXRlKDEpXG4gICAgZXhwZWN0KG5leHRTdGF0ZVdpdGgxTmVpZ2hib3IpLnRvLmVxdWFsKENlbGxTdGF0ZS5ERUFEKVxuICB9KVxuXG4gIGl0KFwic2hvdWxkIGxpdmUgd2l0aCAyIG9yIDMgbGl2ZSBuZWlnaGJvcnNcIiwgKCkgPT4ge1xuICAgIGNvbnN0IGNlbGwgPSBuZXcgQ2VsbChDZWxsU3RhdGUuQUxJVkUpXG4gICAgY29uc3QgbmV4dFN0YXRlV2l0aDJOZWlnaGJvcnMgPSBjZWxsLmdldE5leHRTdGF0ZSgyKVxuICAgIGV4cGVjdChuZXh0U3RhdGVXaXRoMk5laWdoYm9ycykudG8uZXF1YWwoQ2VsbFN0YXRlLkFMSVZFKVxuXG4gICAgY29uc3QgbmV4dFN0YXRlV2l0aDNOZWlnaGJvcnMgPSBjZWxsLmdldE5leHRTdGF0ZSgzKVxuICAgIGV4cGVjdChuZXh0U3RhdGVXaXRoM05laWdoYm9ycykudG8uZXF1YWwoQ2VsbFN0YXRlLkFMSVZFKVxuICB9KVxuXG4gIGl0KFwic2hvdWxkIGRpZSB3aXRoIG1vcmUgdGhhbiAzIG5laWdoYm9yc1wiLCAoKSA9PiB7XG4gICAgY29uc3QgY2VsbCA9IG5ldyBDZWxsKENlbGxTdGF0ZS5BTElWRSlcbiAgICBjb25zdCBuZXh0U3RhdGVXaXRoNE5laWdoYm9ycyA9IGNlbGwuZ2V0TmV4dFN0YXRlKDQpXG4gICAgZXhwZWN0KG5leHRTdGF0ZVdpdGg0TmVpZ2hib3JzKS50by5lcXVhbChDZWxsU3RhdGUuREVBRCk7XG5cbiAgICBjb25zdCBuZXh0U3RhdGVXaXRoOTBOZWlnaGJvcnMgPSBjZWxsLmdldE5leHRTdGF0ZSg5MClcbiAgICBleHBlY3QobmV4dFN0YXRlV2l0aDkwTmVpZ2hib3JzKS50by5lcXVhbChDZWxsU3RhdGUuREVBRCk7XG4gIH0pXG5cbiAgaXQoXCJzaG91bGQgc3RheSBkZWFkIHdpdGggbW9yZSB0aGFuIDMgbmVpZ2hib3JzXCIsICgpID0+IHtcbiAgICBjb25zdCBjZWxsID0gbmV3IENlbGwoQ2VsbFN0YXRlLkRFQUQpXG4gICAgY29uc3QgbmV4dFN0YXRlV2l0aDROZWlnaGJvcnMgPSBjZWxsLmdldE5leHRTdGF0ZSg0KVxuICAgIGV4cGVjdChuZXh0U3RhdGVXaXRoNE5laWdoYm9ycykudG8uZXF1YWwoQ2VsbFN0YXRlLkRFQUQpXG5cbiAgICBjb25zdCBuZXh0U3RhdGVXaXRoOTBOZWlnaGJvcnMgPSBjZWxsLmdldE5leHRTdGF0ZSg5MClcbiAgICBleHBlY3QobmV4dFN0YXRlV2l0aDkwTmVpZ2hib3JzKS50by5lcXVhbChDZWxsU3RhdGUuREVBRCk7XG4gIH0pXG5cbiAgaXQoXCJzaG91bGQgY29tZSBhbGl2ZSB3aXRoIGV4YWN0bHkgMyBuZWlnaGJvcnNcIiwgKCkgPT4ge1xuICAgIGNvbnN0IGNlbGwgPSBuZXcgQ2VsbChDZWxsU3RhdGUuREVBRClcbiAgICBjb25zdCBuZXh0U3RhdGVXaXRoM05laWdoYm9ycyA9IGNlbGwuZ2V0TmV4dFN0YXRlKDMpXG4gICAgICBleHBlY3QobmV4dFN0YXRlV2l0aDNOZWlnaGJvcnMpLnRvLmVxdWFsKENlbGxTdGF0ZS5BTElWRSlcbiAgfSlcbn0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "Cell.test.js"
      ],
      "names": [
        "describe",
        "it",
        "aliveCell",
        "Cell",
        "CellState",
        "ALIVE",
        "state",
        "to",
        "equal",
        "deadCell",
        "DEAD",
        "cell",
        "undefined",
        "nextStateWith0Neighbors",
        "getNextState",
        "nextStateWith1Neighbor",
        "nextStateWith2Neighbors",
        "nextStateWith3Neighbors",
        "nextStateWith4Neighbors",
        "nextStateWith90Neighbors"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/test/",
      "sourcesContent": [
        "import { expect } from 'chai';\nimport CellState from '../CellState';\nimport Cell from '../Cell';\n\ndescribe(\"Cell\", () => {\n  it(\"is initiated with a cellState\", () => {\n    const aliveCell = new Cell(CellState.ALIVE);\n    expect(aliveCell.state).to.equal(CellState.ALIVE)\n\n    const deadCell = new Cell(CellState.DEAD)\n    expect(deadCell.state).to.equal(CellState.DEAD)\n  });\n\n  it(\"should throw an error if not initialized with a CellState\", () => {\n    expect(() => {\n      const cell = new Cell(undefined);\n    }).to.throw();\n  });\n\n  it(\"should die if it has fewer than 2 live neighbors\", () => {\n    const cell = new Cell(CellState.ALIVE)\n    const nextStateWith0Neighbors = cell.getNextState(0)\n    expect(nextStateWith0Neighbors).to.equal(CellState.DEAD)\n    \n    const nextStateWith1Neighbor = cell.getNextState(1)\n    expect(nextStateWith1Neighbor).to.equal(CellState.DEAD)\n  });\n\n  it(\"should stay dead if it has fewer than 2 neighbors\", () => {\n    const cell = new Cell(CellState.DEAD)\n    const nextStateWith0Neighbors = cell.getNextState(0)\n    expect(nextStateWith0Neighbors).to.equal(CellState.DEAD)\n    \n    const nextStateWith1Neighbor = cell.getNextState(1)\n    expect(nextStateWith1Neighbor).to.equal(CellState.DEAD)\n  })\n\n  it(\"should live with 2 or 3 live neighbors\", () => {\n    const cell = new Cell(CellState.ALIVE)\n    const nextStateWith2Neighbors = cell.getNextState(2)\n    expect(nextStateWith2Neighbors).to.equal(CellState.ALIVE)\n\n    const nextStateWith3Neighbors = cell.getNextState(3)\n    expect(nextStateWith3Neighbors).to.equal(CellState.ALIVE)\n  })\n\n  it(\"should die with more than 3 neighbors\", () => {\n    const cell = new Cell(CellState.ALIVE)\n    const nextStateWith4Neighbors = cell.getNextState(4)\n    expect(nextStateWith4Neighbors).to.equal(CellState.DEAD);\n\n    const nextStateWith90Neighbors = cell.getNextState(90)\n    expect(nextStateWith90Neighbors).to.equal(CellState.DEAD);\n  })\n\n  it(\"should stay dead with more than 3 neighbors\", () => {\n    const cell = new Cell(CellState.DEAD)\n    const nextStateWith4Neighbors = cell.getNextState(4)\n    expect(nextStateWith4Neighbors).to.equal(CellState.DEAD)\n\n    const nextStateWith90Neighbors = cell.getNextState(90)\n    expect(nextStateWith90Neighbors).to.equal(CellState.DEAD);\n  })\n\n  it(\"should come alive with exactly 3 neighbors\", () => {\n    const cell = new Cell(CellState.DEAD)\n    const nextStateWith3Neighbors = cell.getNextState(3)\n      expect(nextStateWith3Neighbors).to.equal(CellState.ALIVE)\n  })\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1598019919881
  },
  "{\"sourceRoot\":\"/Users/katiemcdonagh/react/gameOfLife/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/katiemcdonagh/react/gameOfLife\",\"filename\":\"/Users/katiemcdonagh/react/gameOfLife/Cell.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/katiemcdonagh/react/gameOfLife\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/katiemcdonagh/react/gameOfLife",
      "filename": "/Users/katiemcdonagh/react/gameOfLife/Cell.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/katiemcdonagh/react/gameOfLife",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/katiemcdonagh/react/gameOfLife/Cell.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/katiemcdonagh/react/gameOfLife/Cell.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/",
        "sourceFileName": "Cell.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _CellState = _interopRequireDefault(require(\"./CellState\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Cell = /*#__PURE__*/function () {\n  function Cell(state) {\n    _classCallCheck(this, Cell);\n\n    if (Object.values(_CellState[\"default\"]).indexOf(state) === -1) {\n      throw new Error('Invalid State');\n    }\n\n    this.state = state;\n  }\n\n  _createClass(Cell, [{\n    key: \"getNextState\",\n    value: function getNextState(numNeighbors) {\n      if (this.state === _CellState[\"default\"].ALIVE) {\n        if (numNeighbors === 2 || numNeighbors === 3) {\n          return this.state;\n        }\n      } else if (numNeighbors === 3) {\n        return _CellState[\"default\"].ALIVE;\n      }\n\n      return _CellState[\"default\"].DEAD;\n    }\n  }]);\n\n  return Cell;\n}();\n\nexports[\"default\"] = Cell;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNlbGwuanMiXSwibmFtZXMiOlsiQ2VsbCIsInN0YXRlIiwiT2JqZWN0IiwidmFsdWVzIiwiQ2VsbFN0YXRlIiwiaW5kZXhPZiIsIkVycm9yIiwibnVtTmVpZ2hib3JzIiwiQUxJVkUiLCJERUFEIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7SUFFcUJBLEk7QUFDbkIsZ0JBQVlDLEtBQVosRUFBa0I7QUFBQTs7QUFDaEIsUUFBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWNDLHFCQUFkLEVBQXlCQyxPQUF6QixDQUFpQ0osS0FBakMsTUFBNEMsQ0FBQyxDQUFoRCxFQUFtRDtBQUNqRCxZQUFNLElBQUlLLEtBQUosQ0FBVSxlQUFWLENBQU47QUFDQzs7QUFDSCxTQUFLTCxLQUFMLEdBQWFBLEtBQWI7QUFDRDs7OztpQ0FFWU0sWSxFQUFhO0FBQ3hCLFVBQUksS0FBS04sS0FBTCxLQUFlRyxzQkFBVUksS0FBN0IsRUFBbUM7QUFDakMsWUFBSUQsWUFBWSxLQUFLLENBQWpCLElBQXNCQSxZQUFZLEtBQUssQ0FBM0MsRUFBOEM7QUFDNUMsaUJBQU8sS0FBS04sS0FBWjtBQUNEO0FBQ0YsT0FKRCxNQUlPLElBQUlNLFlBQVksS0FBSyxDQUFyQixFQUF3QjtBQUMzQixlQUFPSCxzQkFBVUksS0FBakI7QUFDRDs7QUFDSCxhQUFPSixzQkFBVUssSUFBakI7QUFDRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMva2F0aWVtY2RvbmFnaC9yZWFjdC9nYW1lT2ZMaWZlLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDZWxsU3RhdGUgZnJvbSBcIi4vQ2VsbFN0YXRlXCJcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2VsbCB7XG4gIGNvbnN0cnVjdG9yKHN0YXRlKXtcbiAgICBpZihPYmplY3QudmFsdWVzKENlbGxTdGF0ZSkuaW5kZXhPZihzdGF0ZSkgPT09IC0xKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgU3RhdGUnKTtcbiAgICAgIH1cbiAgICB0aGlzLnN0YXRlID0gc3RhdGVcbiAgfVxuXG4gIGdldE5leHRTdGF0ZShudW1OZWlnaGJvcnMpe1xuICAgIGlmICh0aGlzLnN0YXRlID09PSBDZWxsU3RhdGUuQUxJVkUpe1xuICAgICAgaWYgKG51bU5laWdoYm9ycyA9PT0gMiB8fCBudW1OZWlnaGJvcnMgPT09IDMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGU7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChudW1OZWlnaGJvcnMgPT09IDMpIHtcbiAgICAgICAgcmV0dXJuIENlbGxTdGF0ZS5BTElWRTtcbiAgICAgIH1cbiAgICByZXR1cm4gQ2VsbFN0YXRlLkRFQUQ7XG4gIH1cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Cell.js"
      ],
      "names": [
        "Cell",
        "state",
        "Object",
        "values",
        "CellState",
        "indexOf",
        "Error",
        "numNeighbors",
        "ALIVE",
        "DEAD"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEqBA,I;AACnB,gBAAYC,KAAZ,EAAkB;AAAA;;AAChB,QAAGC,MAAM,CAACC,MAAP,CAAcC,qBAAd,EAAyBC,OAAzB,CAAiCJ,KAAjC,MAA4C,CAAC,CAAhD,EAAmD;AACjD,YAAM,IAAIK,KAAJ,CAAU,eAAV,CAAN;AACC;;AACH,SAAKL,KAAL,GAAaA,KAAb;AACD;;;;iCAEYM,Y,EAAa;AACxB,UAAI,KAAKN,KAAL,KAAeG,sBAAUI,KAA7B,EAAmC;AACjC,YAAID,YAAY,KAAK,CAAjB,IAAsBA,YAAY,KAAK,CAA3C,EAA8C;AAC5C,iBAAO,KAAKN,KAAZ;AACD;AACF,OAJD,MAIO,IAAIM,YAAY,KAAK,CAArB,EAAwB;AAC3B,eAAOH,sBAAUI,KAAjB;AACD;;AACH,aAAOJ,sBAAUK,IAAjB;AACD",
      "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/",
      "sourcesContent": [
        "import CellState from \"./CellState\"\n\nexport default class Cell {\n  constructor(state){\n    if(Object.values(CellState).indexOf(state) === -1) {\n      throw new Error('Invalid State');\n      }\n    this.state = state\n  }\n\n  getNextState(numNeighbors){\n    if (this.state === CellState.ALIVE){\n      if (numNeighbors === 2 || numNeighbors === 3) {\n        return this.state;\n      }\n    } else if (numNeighbors === 3) {\n        return CellState.ALIVE;\n      }\n    return CellState.DEAD;\n  }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1598021495302
  },
  "{\"sourceRoot\":\"/Users/katiemcdonagh/react/gameOfLife/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/katiemcdonagh/react/gameOfLife\",\"filename\":\"/Users/katiemcdonagh/react/gameOfLife/test/Game.test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/katiemcdonagh/react/gameOfLife\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/katiemcdonagh/react/gameOfLife",
      "filename": "/Users/katiemcdonagh/react/gameOfLife/test/Game.test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/katiemcdonagh/react/gameOfLife",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/katiemcdonagh/react/gameOfLife/test/Game.test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/katiemcdonagh/react/gameOfLife/test/Game.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/test/",
        "sourceFileName": "Game.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _CellState = _interopRequireDefault(require(\"../CellState\"));\n\nvar _Game = _interopRequireDefault(require(\"../Game\"));\n\nvar _Cell = _interopRequireDefault(require(\"../Cell\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar DEAD = _CellState[\"default\"].DEAD,\n    ALIVE = _CellState[\"default\"].ALIVE;\nvar deadState = [[DEAD, DEAD, DEAD], [DEAD, DEAD, DEAD], [DEAD, DEAD, DEAD]];\ndescribe('Game of Life', function () {\n  it('should be initialized with a given state', function () {\n    var game = new _Game[\"default\"](deadState);\n    var cellState = [[new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD)], [new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD)], [new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD)]];\n    (0, _chai.expect)(game.state).to.deep.equal(cellState);\n  });\n  xit('should retrieve a cell at a given row and colum', function () {\n    var game = new _Game[\"default\"](deadState);\n    var cell = game.getCell(0, 0);\n    (0, _chai.expect)(cell).to.be[\"instanceof\"](_Cell[\"default\"]);\n    (0, _chai.expect)(cell.state).to.equal(deadState[0][0]);\n    var gameState = [[ALIVE, DEAD], [DEAD, ALIVE]];\n    var newGame = new _Game[\"default\"](gameState);\n    var aliveCell = game.getCell(0, 0);\n    (0, _chai.expect)(aliveCell).to.be.an[\"instanceof\"](_Cell[\"default\"]);\n    (0, _chai.expect)(aliveCell.state).to.equal(gameState[0][0]);\n    var deadCell = game.getCell(1, 1);\n    (0, _chai.expect)(deadCell).to.be.an[\"instanceof\"](_Cell[\"default\"]);\n    (0, _chai.expect)(deadCell.state).to.equal(gameState[0][1]);\n  });\n  it(\"should get the number of alive neighbors of a given cell\", function () {\n    var gameState = [[ALIVE, ALIVE, ALIVE], [ALIVE, ALIVE, ALIVE], [ALIVE, ALIVE, ALIVE]];\n    var game = new _Game[\"default\"](gameState);\n    var numAliveNeighbors = game.getNumOfAliveNeighbors(1, 1);\n    (0, _chai.expect)(numAliveNeighbors).to.equal(8);\n  });\n  it(\"should get the number of alive neighbors above a given cell\", function () {\n    var gameState = [[ALIVE, ALIVE, ALIVE], [DEAD, ALIVE, DEAD], [DEAD, DEAD, DEAD]];\n    var game = new _Game[\"default\"](gameState);\n    var numAliveNeighbors = game.getNumOfAliveNeighbors(1, 1);\n    (0, _chai.expect)(numAliveNeighbors).to.equal(3);\n  });\n  it(\"should get the number of alive neighbors below a given cell\", function () {\n    var gameState = [[DEAD, DEAD, DEAD], [DEAD, ALIVE, DEAD], [ALIVE, ALIVE, ALIVE]];\n    var game = new _Game[\"default\"](gameState);\n    var numAliveNeighbors = game.getNumOfAliveNeighbors(1, 1);\n    (0, _chai.expect)(numAliveNeighbors).to.equal(3);\n  });\n  it(\"should get the number of alive neighbors next to  a given cell\", function () {\n    var gameState = [[DEAD, DEAD, DEAD], [ALIVE, ALIVE, ALIVE], [DEAD, DEAD, DEAD]];\n    var game = new _Game[\"default\"](gameState);\n    var numAliveNeighbors = game.getNumOfAliveNeighbors(1, 1);\n    (0, _chai.expect)(numAliveNeighbors).to.equal(2);\n  });\n  it(\"should get the number of alive neighbors for cell in the top row\", function () {\n    var gameState = [[ALIVE, ALIVE, ALIVE], [DEAD, DEAD, DEAD], [DEAD, DEAD, DEAD]];\n    var game = new _Game[\"default\"](gameState);\n    var numAliveNeighbors = game.getNumOfAliveNeighbors(0, 1);\n    (0, _chai.expect)(numAliveNeighbors).to.equal(2);\n  });\n  it(\"should get the number of alive neighbors for cell in the first colum\", function () {\n    var gameState = [[ALIVE, ALIVE, DEAD], [DEAD, DEAD, DEAD], [DEAD, DEAD, DEAD]];\n    var game = new _Game[\"default\"](gameState);\n    var numAliveNeighbors = game.getNumOfAliveNeighbors(0, 0);\n    (0, _chai.expect)(numAliveNeighbors).to.equal(1);\n  });\n  it(\"should get the number of alive neighbors for cell in the first colum\", function () {\n    var gameState = [[DEAD, DEAD, DEAD], [ALIVE, DEAD, DEAD], [DEAD, DEAD, DEAD]];\n    var game = new _Game[\"default\"](gameState);\n    var numAliveNeighbors = game.getNumOfAliveNeighbors(1, 0);\n    (0, _chai.expect)(numAliveNeighbors).to.equal(0);\n  });\n  it(\"should get the number of alive neighbors for cell in the bottom row\", function () {\n    var gameState = [[DEAD, DEAD, DEAD], [DEAD, DEAD, DEAD], [ALIVE, ALIVE, ALIVE]];\n    var game = new _Game[\"default\"](gameState);\n    var numAliveNeighbors = game.getNumOfAliveNeighbors(2, 1);\n    (0, _chai.expect)(numAliveNeighbors).to.equal(2);\n  });\n  it(\"should get the number of alive neighbors for cell in the far right row\", function () {\n    var gameState = [[DEAD, DEAD, DEAD], [DEAD, DEAD, ALIVE], [DEAD, DEAD, DEAD]];\n    var game = new _Game[\"default\"](gameState);\n    var numAliveNeighbors = game.getNumOfAliveNeighbors(1, 2);\n    (0, _chai.expect)(numAliveNeighbors).to.equal(0);\n  });\n  it(\"should get the number of alive neighbors for cell in a really big grid\", function () {\n    var gameStaten    var game = new _Game[\"default\"](gameState);\n    var numAliveNeighbors = game.getNumOfAliveNeighbors(3, 4);\n    (0, _chai.expect)(numAliveNeighbors).to.equal(8);\n  });\n  it(\"should create the next state of the game\", function () {\n    var gameState = [[DEAD, DEAD, DEAD, DEAD, DEAD], [DEAD, DEAD, ALIVE, DEAD, DEAD], [DEAD, DEAD, ALIVE, DEAD, DEAD], [DEAD, DEAD, ALIVE, DEAD, DEAD], [DEAD, DEAD, DEAD, DEAD, DEAD]];\n    var game = new _Game[\"default\"](gameState);\n    game.nextState();\n    var expectedState = [[new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD)], [new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD)], [new _Cell[\"default\"](DEAD), new _Cell[\"default\"](ALIVE), new _Cell[\"default\"](ALIVE), new _Cell[\"default\"](ALIVE), new _Cell[\"default\"](DEAD)], [new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD)], [new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD), new _Cell[\"default\"](DEAD)]];\n    (0, _chai.expect)(game.state).to.deep.equal(expectedState);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Game.test.js"
      ],
      "names": [
        "DEAD",
        "CellState",
        "ALIVE",
        "deadState",
        "describe",
        "it",
        "game",
        "Game",
        "cellState",
        "Cell",
        "state",
        "to",
        "deep",
        "equal",
        "xit",
        "cell",
        "getCell",
        "be",
        "gameState",
        "newGame",
        "aliveCell",
        "an",
        "deadCell",
        "numAliveNeighbors",
        "getNumOfAliveNeighbors",
        "nextState",
        "expectedState"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/test/",
      "sourcesContent": [
        "import { expect } from 'chai';\n\nimport CellState from '../CellState';\nimport Game from '../Game';\nimport Cell from '../Cell';\n\nconst { DEAD, ALIVE } = CellState;\n\nconst deadState = [\n  [DEAD, DEAD, DEAD], \n  [DEAD, DEAD, DEAD],\n  [DEAD, DEAD, DEAD], \n];\n\ndescribe('Game of Life', () => {\n\n  it('should be initialized with a given state', () => {\n\n    const game = new Game(deadState);\n    const cellState = [\n      [new Cell(DEAD), new Cell(DEAD), new Cell(DEAD)], \n      [new Cell(DEAD), new Cell(DEAD), new Cell(DEAD)],\n      [new Cell(DEAD), new Cell(DEAD), new Cell(DEAD)]\n    ];\n\n    expect(game.state).to.deep.equal(cellState);\n  });\n\n xit('should retrieve a cell at a given row and colum', () => {\n    const game = new Game(deadState);\n    const cell = game.getCell(0, 0);\n    expect(cell).to.be.instanceof(Cell)\n    expect(cell.state).to.equal(deadState[0][0]);\n\n    const gameState = [\n      [ALIVE, DEAD],\n      [DEAD, ALIVE],\n    ]\n    const newGame = new Game(gameState);\n    const aliveCell = game.getCell(0, 0);\n    expect(aliveCell).to.be.an.instanceof(Cell)\n    expect(aliveCell.state).to.equal(gameState[0][0]);\n\n    const deadCell = game.getCell(1, 1);\n    expect(deadCell).to.be.an.instanceof(Cell)\n    expect(deadCell.state).to.equal(gameState[0][1]);\n\n  })\n\n  it(\"should get the number of alive neighbors of a given cell\", () => {\n    const gameState = [\n      [ALIVE, ALIVE, ALIVE],\n      [ALIVE, ALIVE, ALIVE],\n      [ALIVE, ALIVE, ALIVE]\n    ];\n    const game = new Game(gameState);\n    const numAliveNeighbors = game.getNumOfAliveNeighbors(1, 1)\n    expect(numAliveNeighbors).to.equal(8);\n  });\n\n  it(\"should get the number of alive neighbors above a given cell\", () => {\n    const gameState = [\n      [ALIVE, ALIVE, ALIVE],\n      [DEAD, ALIVE, DEAD],\n      [DEAD, DEAD, DEAD]\n    ];\n    const game = new Game(gameState);\n    const numAliveNeighbors = game.getNumOfAliveNeighbors(1, 1)\n    expect(numAliveNeighbors).to.equal(3);\n  });\n\n  it(\"should get the number of alive neighbors below a given cell\", () => {\n    const gameState = [\n      [DEAD, DEAD, DEAD],\n      [DEAD, ALIVE, DEAD],\n      [ALIVE, ALIVE, ALIVE]\n    ];\n    const game = new Game(gameState);\n    const numAliveNeighbors = game.getNumOfAliveNeighbors(1, 1)\n    expect(numAliveNeighbors).to.equal(3);\n  });\n\n  it(\"should get the number of alive neighbors next to  a given cell\", () => {\n    const gameState = [\n      [DEAD, DEAD, DEAD],\n      [ALIVE, ALIVE, ALIVE],\n      [DEAD, DEAD, DEAD],\n\n    ];\n    const game = new Game(gameState);\n    const numAliveNeighbors = game.getNumOfAliveNeighbors(1, 1)\n    expect(numAliveNeighbors).to.equal(2);\n  });\n\n  it(\"should get the number of alive neighbors for cell in the top row\", () => {\n    const gameState = [\n      [ALIVE, ALIVE, ALIVE],\n      [DEAD, DEAD, DEAD],\n      [DEAD, DEAD, DEAD],\n\n    ];\n    const game = new Game(gameState);\n    const numAliveNeighbors = game.getNumOfAliveNeighbors(0, 1);\n    expect(numAliveNeighbors).to.equal(2);\n  })\n\n  it(\"should get the number of alive neighbors for cell in the first colum\", () => {\n    const gameState = [\n      [ALIVE, ALIVE, DEAD],\n      [DEAD, DEAD, DEAD],\n      [DEAD, DEAD, DEAD],\n\n    ];\n    const game = new Game(gameState)\n    const numAliveNeighbors = game.getNumOfAliveNeighbors(0, 0);\n    expect(numAliveNeighbors).to.equal(1);\n  });\n\n  it(\"should get the number of alive neighbors for cell in the first colum\", () => {\n    const gameState = [\n      [DEAD, DEAD, DEAD],\n      [ALIVE, DEAD, DEAD],\n      [DEAD, DEAD, DEAD],\n\n    ];\n    const game = new Game(gameState)\n    const numAliveNeighbors = game.getNumOfAliveNeighbors(1, 0);\n    expect(numAliveNeighbors).to.equal(0);\n  });\n  it(\"should get the number of alive neighbors for cell in the bottom row\", () => {\n    const gameState = [\n      [DEAD, DEAD, DEAD],\n      [DEAD, DEAD, DEAD],\n      [ALIVE, ALIVE, ALIVE],\n\n    ];\n    const game = new Game(gameState)\n    const numAliveNeighbors = game.getNumOfAliveNeighbors(2, 1);\n    expect(numAliveNeighbors).to.equal(2);\n  });\n\n  it(\"should get the number of alive neighbors for cell in the far right row\", () => {\n    const gameState = [\n      [DEAD, DEAD, DEAD],\n      [DEAD, DEAD, ALIVE],\n      [DEAD, DEAD, DEAD],\n\n    ];\n    const game = new Game(gameState)\n    const numAliveNeighbors = game.getNumOfAliveNeighbors(1, 2);\n    expect(numAliveNeighbors).to.equal(0);\n  });\n\n  it(\"should get the number of alive neighbors for cell in a really big grid\", () => {\n    const gameState = [\n      [DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD],\n      [DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD],\n      [DEAD, DEAD, DEAD, ALIVE, ALIVE, ALIVE, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD],\n      [DEAD, DEAD, DEAD, ALIVE, DEAD, ALIVE, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD],\n      [DEAD, DEAD, DEAD, ALIVE, ALIVE, ALIVE, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD],\n      [DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD],\n      [DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD],\n      [DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD],\n      [DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD],\n      [DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD],\n    ];\n    const game = new Game(gameState)\n    const numAliveNeighbors = game.getNumOfAliveNeighbors(3, 4);\n    expect(numAliveNeighbors).to.equal(8);\n  });\n\n  it(\"should create the next state of the game\", () => {\n    const gameState = [\n      [DEAD, DEAD, DEAD, DEAD, DEAD],\n      [DEAD, DEAD, ALIVE, DEAD, DEAD],\n      [DEAD, DEAD, ALIVE, DEAD, DEAD],\n      [DEAD, DEAD, ALIVE, DEAD, DEAD],\n      [DEAD, DEAD, DEAD, DEAD, DEAD],\n    ];\n    const game = new Game(gameState)\n\n    game.nextState();\n\n    const expectedState = [\n      [new Cell(DEAD), new Cell(DEAD), new Cell(DEAD), new Cell(DEAD), new Cell(DEAD)],\n      [new Cell(DEAD), new Cell(DEAD), new Cell(DEAD), new Cell(DEAD), new Cell(DEAD)],\n      [new Cell(DEAD), new Cell(ALIVE), new Cell(ALIVE), new Cell(ALIVE), new Cell(DEAD)],\n      [new Cell(DEAD), new Cell(DEAD), new Cell(DEAD), new Cell(DEAD), new Cell(DEAD)],\n      [new Cell(DEAD), new Cell(DEAD), new Cell(DEAD), new Cell(DEAD), new Cell(DEAD)],\n    ];\n\n    expect(game.state).to.deep.equal(expectedState)\n  })\n\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1598042732413
  },
  "{\"sourceRoot\":\"/Users/katiemcdonagh/react/gameOfLife/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/katiemcdonagh/react/gameOfLife\",\"filename\":\"/Users/katiemcdonagh/react/gameOfLife/Game.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/katiemcdonagh/react/gameOfLife\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/katiemcdonagh/react/gameOfLife",
      "filename": "/Users/katiemcdonagh/react/gameOfLife/Game.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/katiemcdonagh/react/gameOfLife",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/katiemcdonagh/react/gameOfLife/Game.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/katiemcdonagh/react/gameOfLife/Game.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/",
        "sourceFileName": "Game.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Cell = _interopRequireDefault(require(\"./Cell\"));\n\nvar _CellState = _interopRequireDefault(require(\"./CellState\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Game = /*#__PURE__*/function () {\n  function Game(state) {\n    _classCallCheck(this, Game);\n\n    this.numRows = state.length;\n    this.numCols = state[0].length;\n    this.state = state.map(function (row) {\n      return row.map(function (cellState) {\n        return new _Cell[\"default\"](cellState);\n      });\n    });\n  }\n\n  _createClass(Game, [{\n    key: \"getCell\",\n    value: function getCell(row, col) {\n      return this.state[row][col];\n    }\n  }, {\n    key: \"getNumOfAliveNeighbors\",\n    value: function getNumOfAliveNeighbors(row, col) {\n      var _stateValues;\n\n      var stateValues = (_stateValues = {}, _defineProperty(_stateValues, _CellState[\"default\"].ALIVE, 1), _defineProperty(_stateValues, _CellState[\"default\"].DEAD, 0), _stateValues);\n\n      var cellAbove = function cellAbove(rowNum, colNum) {\n        return colNum === col - 1 && rowNum === row - 1 || colNum === col && rowNum === row - 1 || colNum === col + 1 && rowNum === row - 1;\n      };\n\n      var cellBelow = function cellBelow(rowNum, colNum) {\n        return colNum === col - 1 && rowNum === row + 1 || colNum === col && rowNum === row + 1 || colNum === col + 1 && rowNum === row + 1;\n      };\n\n      var cellNext = function cellNext(rowNum, colNum) {\n        return colNum === col - 1 && rowNum == row || colNum === col + 1 && rowNum === row;\n      };\n\n      var numNeighbors = 0;\n      this.state.forEach(function (cellRow, rowNum) {\n        cellRow.forEach(function (cell, colNum) {\n          if (cellAbove(rowNum, colNum) || cellNext(rowNum, colNum) || cellBelow(rowNum, colNum)) {\n            numNeighbors += stateValues[cell.state];\n          }\n        });\n      });\n      return numNeighbors;\n    }\n  }, {\n    key: \"nextState\",\n    value: function nextState() {\n      var _this = this;\n\n      this.state = this.state.map(function (row, rowNum) {\n        return row.map(function (cell, colNum) {\n          return new _Cell[\"default\"](cell.getNextState(_this.getNumOfAliveNeighbors(rowNum, colNum)));\n        });\n      });\n    }\n  }]);\n\n  return Game;\n}();\n\nexports[\"default\"] = Game;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdhbWUuanMiXSwibmFtZXMiOlsiR2FtZSIsInN0YXRlIiwibnVtUm93cyIsImxlbmd0aCIsIm51bUNvbHMiLCJtYXAiLCJyb3ciLCJjZWxsU3RhdGUiLCJDZWxsIiwiY29sIiwic3RhdGVWYWx1ZXMiLCJDZWxsU3RhdGUiLCJBTElWRSIsIkRFQUQiLCJjZWxsQWJvdmUiLCJyb3dOdW0iLCJjb2xOdW0iLCJjZWxsQmVsb3ciLCJjZWxsTmV4dCIsIm51bU5laWdoYm9ycyIsImZvckVhY2giLCJjZWxsUm93IiwiY2VsbCIsImdldE5leHRTdGF0ZSIsImdldE51bU9mQWxpdmVOZWlnaGJvcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7O0lBRXFCQSxJO0FBQ25CLGdCQUFZQyxLQUFaLEVBQWtCO0FBQUE7O0FBQ2hCLFNBQUtDLE9BQUwsR0FBZUQsS0FBSyxDQUFDRSxNQUFyQjtBQUNBLFNBQUtDLE9BQUwsR0FBZUgsS0FBSyxDQUFDLENBQUQsQ0FBTCxDQUFTRSxNQUF4QjtBQUNBLFNBQUtGLEtBQUwsR0FBYUEsS0FBSyxDQUFDSSxHQUFOLENBQVUsVUFBQUMsR0FBRztBQUFBLGFBQUlBLEdBQUcsQ0FBQ0QsR0FBSixDQUFRLFVBQUFFLFNBQVM7QUFBQSxlQUFJLElBQUlDLGdCQUFKLENBQVNELFNBQVQsQ0FBSjtBQUFBLE9BQWpCLENBQUo7QUFBQSxLQUFiLENBQWI7QUFDRDs7Ozs0QkFFT0QsRyxFQUFLRyxHLEVBQUk7QUFDZixhQUFPLEtBQUtSLEtBQUwsQ0FBV0ssR0FBWCxFQUFnQkcsR0FBaEIsQ0FBUDtBQUNEOzs7MkNBRXNCSCxHLEVBQUtHLEcsRUFBSztBQUFBOztBQUUvQixVQUFNQyxXQUFXLHFEQUNkQyxzQkFBVUMsS0FESSxFQUNJLENBREosaUNBRWRELHNCQUFVRSxJQUZJLEVBRUcsQ0FGSCxnQkFBakI7O0FBS0EsVUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBQ0MsTUFBRCxFQUFTQyxNQUFUO0FBQUEsZUFDZkEsTUFBTSxLQUFLUCxHQUFHLEdBQUUsQ0FBaEIsSUFBcUJNLE1BQU0sS0FBS1QsR0FBRyxHQUFHLENBQXZDLElBQ0dVLE1BQU0sS0FBS1AsR0FBWCxJQUFrQk0sTUFBTSxLQUFLVCxHQUFHLEdBQUcsQ0FEdEMsSUFFR1UsTUFBTSxLQUFLUCxHQUFHLEdBQUcsQ0FBakIsSUFBc0JNLE1BQU0sS0FBS1QsR0FBRyxHQUFHLENBSDFCO0FBQUEsT0FBbEI7O0FBTUEsVUFBTVcsU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBQ0YsTUFBRCxFQUFTQyxNQUFUO0FBQUEsZUFDZkEsTUFBTSxLQUFLUCxHQUFHLEdBQUUsQ0FBaEIsSUFBcUJNLE1BQU0sS0FBS1QsR0FBRyxHQUFHLENBQXZDLElBQ0tVLE1BQU0sS0FBS1AsR0FBWCxJQUFrQk0sTUFBTSxLQUFLVCxHQUFHLEdBQUcsQ0FEeEMsSUFFS1UsTUFBTSxLQUFLUCxHQUFHLEdBQUcsQ0FBakIsSUFBc0JNLE1BQU0sS0FBS1QsR0FBRyxHQUFHLENBSDVCO0FBQUEsT0FBbEI7O0FBTUEsVUFBTVksUUFBUSxHQUFHLFNBQVhBLFFBQVcsQ0FBQ0gsTUFBRCxFQUFTQyxNQUFUO0FBQUEsZUFDZEEsTUFBTSxLQUFLUCxHQUFHLEdBQUUsQ0FBaEIsSUFBcUJNLE1BQU0sSUFBSVQsR0FBaEMsSUFDS1UsTUFBTSxLQUFLUCxHQUFHLEdBQUcsQ0FBakIsSUFBc0JNLE1BQU0sS0FBS1QsR0FGdkI7QUFBQSxPQUFqQjs7QUFLRCxVQUFJYSxZQUFZLEdBQUcsQ0FBbkI7QUFFQSxXQUFLbEIsS0FBTCxDQUFXbUIsT0FBWCxDQUFtQixVQUFDQyxPQUFELEVBQVVOLE1BQVYsRUFBcUI7QUFDdENNLFFBQUFBLE9BQU8sQ0FBQ0QsT0FBUixDQUFnQixVQUFDRSxJQUFELEVBQU9OLE1BQVAsRUFBa0I7QUFDaEMsY0FBR0YsU0FBUyxDQUFDQyxNQUFELEVBQVNDLE1BQVQsQ0FBVCxJQUNDRSxRQUFRLENBQUNILE1BQUQsRUFBU0MsTUFBVCxDQURULElBRUNDLFNBQVMsQ0FBQ0YsTUFBRCxFQUFTQyxNQUFULENBRmIsRUFFOEI7QUFDNUJHLFlBQUFBLFlBQVksSUFBSVQsV0FBVyxDQUFDWSxJQUFJLENBQUNyQixLQUFOLENBQTNCO0FBQ0Q7QUFDRixTQU5EO0FBT0QsT0FSRDtBQVVBLGFBQU9rQixZQUFQO0FBQ0E7OztnQ0FFVztBQUFBOztBQUNWLFdBQUtsQixLQUFMLEdBQWEsS0FBS0EsS0FBTCxDQUFXSSxHQUFYLENBQWUsVUFBQ0MsR0FBRCxFQUFNUyxNQUFOO0FBQUEsZUFBaUJULEdBQUcsQ0FBQ0QsR0FBSixDQUFRLFVBQUNpQixJQUFELEVBQU9OLE1BQVA7QUFBQSxpQkFBa0IsSUFBSVIsZ0JBQUosQ0FBU2MsSUFBSSxDQUFDQyxZQUFMLENBQWtCLEtBQUksQ0FBQ0Msc0JBQUwsQ0FBNEJULE1BQTVCLEVBQW9DQyxNQUFwQyxDQUFsQixDQUFULENBQWxCO0FBQUEsU0FBUixDQUFqQjtBQUFBLE9BQWYsQ0FBYjtBQUNEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9rYXRpZW1jZG9uYWdoL3JlYWN0L2dhbWVPZkxpZmUvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENlbGwgZnJvbSBcIi4vQ2VsbFwiO1xuaW1wb3J0IENlbGxTdGF0ZSBmcm9tICcuL0NlbGxTdGF0ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWUge1xuICBjb25zdHJ1Y3RvcihzdGF0ZSl7XG4gICAgdGhpcy5udW1Sb3dzID0gc3RhdGUubGVuZ3RoXG4gICAgdGhpcy5udW1Db2xzID0gc3RhdGVbMF0ubGVuZ3RoXG4gICAgdGhpcy5zdGF0ZSA9IHN0YXRlLm1hcChyb3cgPT4gcm93Lm1hcChjZWxsU3RhdGUgPT4gbmV3IENlbGwoY2VsbFN0YXRlKSkpO1xuICB9XG5cbiAgZ2V0Q2VsbChyb3csIGNvbCl7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGVbcm93XVtjb2xdO1xuICB9XG5cbiAgZ2V0TnVtT2ZBbGl2ZU5laWdoYm9ycyhyb3csIGNvbCkge1xuXG4gICAgY29uc3Qgc3RhdGVWYWx1ZXMgPSB7XG4gICAgICBbQ2VsbFN0YXRlLkFMSVZFXTogMSxcbiAgICAgIFtDZWxsU3RhdGUuREVBRF06IDAsXG4gICAgfTtcblxuICAgIGNvbnN0IGNlbGxBYm92ZSA9IChyb3dOdW0sIGNvbE51bSkgPT4gKFxuICAgICAgKGNvbE51bSA9PT0gY29sIC0xICYmIHJvd051bSA9PT0gcm93IC0gMSlcbiAgICAgIHx8KGNvbE51bSA9PT0gY29sICYmIHJvd051bSA9PT0gcm93IC0gMSlcbiAgICAgIHx8KGNvbE51bSA9PT0gY29sICsgMSAmJiByb3dOdW0gPT09IHJvdyAtIDEpXG4gICAgKTtcblxuICAgIGNvbnN0IGNlbGxCZWxvdyA9IChyb3dOdW0sIGNvbE51bSkgPT4gKFxuICAgICAgKGNvbE51bSA9PT0gY29sIC0xICYmIHJvd051bSA9PT0gcm93ICsgMSlcbiAgICAgICAgfHwoY29sTnVtID09PSBjb2wgJiYgcm93TnVtID09PSByb3cgKyAxKVxuICAgICAgICB8fChjb2xOdW0gPT09IGNvbCArIDEgJiYgcm93TnVtID09PSByb3cgKyAxKVxuICAgICk7XG5cbiAgICBjb25zdCBjZWxsTmV4dCA9IChyb3dOdW0sIGNvbE51bSkgPT4gKFxuICAgICAgKGNvbE51bSA9PT0gY29sIC0xICYmIHJvd051bSA9PSByb3cpXG4gICAgICAgIHx8KGNvbE51bSA9PT0gY29sICsgMSAmJiByb3dOdW0gPT09IHJvdylcbiAgICApXG5cbiAgIGxldCBudW1OZWlnaGJvcnMgPSAwO1xuXG4gICB0aGlzLnN0YXRlLmZvckVhY2goKGNlbGxSb3csIHJvd051bSkgPT4ge1xuICAgICBjZWxsUm93LmZvckVhY2goKGNlbGwsIGNvbE51bSkgPT4ge1xuICAgICAgIGlmKGNlbGxBYm92ZShyb3dOdW0sIGNvbE51bSkgXG4gICAgICAgIHx8IGNlbGxOZXh0KHJvd051bSwgY29sTnVtKSBcbiAgICAgICAgfHwgY2VsbEJlbG93KHJvd051bSwgY29sTnVtKSl7XG4gICAgICAgICBudW1OZWlnaGJvcnMgKz0gc3RhdGVWYWx1ZXNbY2VsbC5zdGF0ZV07XG4gICAgICAgfSBcbiAgICAgfSk7XG4gICB9KTtcblxuICAgcmV0dXJuIG51bU5laWdoYm9yc1xuICB9XG5cbiAgbmV4dFN0YXRlKCkge1xuICAgIHRoaXMuc3RhdGUgPSB0aGlzLnN0YXRlLm1hcCgocm93LCByb3dOdW0pID0+IHJvdy5tYXAoKGNlbGwsIGNvbE51bSkgPT4gbmV3IENlbGwoY2VsbC5nZXROZXh0U3RhdGUodGhpcy5nZXROdW1PZkFsaXZlTmVpZ2hib3JzKHJvd051bSwgY29sTnVtKSkpKSk7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Game.js"
      ],
      "names": [
        "Game",
        "state",
        "numRows",
        "length",
        "numCols",
        "map",
        "row",
        "cellState",
        "Cell",
        "col",
        "stateValues",
        "CellState",
        "ALIVE",
        "DEAD",
        "cellAbove",
        "rowNum",
        "colNum",
        "cellBelow",
        "cellNext",
        "numNeighbors",
        "forEach",
        "cellRow",
        "cell",
        "getNextState",
        "getNumOfAliveNeighbors"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;IAEqBA,I;AACnB,gBAAYC,KAAZ,EAAkB;AAAA;;AAChB,SAAKC,OAAL,GAAeD,KAAK,CAACE,MAArB;AACA,SAAKC,OAAL,GAAeH,KAAK,CAAC,CAAD,CAAL,CAASE,MAAxB;AACA,SAAKF,KAAL,GAAaA,KAAK,CAACI,GAAN,CAAU,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACD,GAAJ,CAAQ,UAAAE,SAAS;AAAA,eAAI,IAAIC,gBAAJ,CAASD,SAAT,CAAJ;AAAA,OAAjB,CAAJ;AAAA,KAAb,CAAb;AACD;;;;4BAEOD,G,EAAKG,G,EAAI;AACf,aAAO,KAAKR,KAAL,CAAWK,GAAX,EAAgBG,GAAhB,CAAP;AACD;;;2CAEsBH,G,EAAKG,G,EAAK;AAAA;;AAE/B,UAAMC,WAAW,qDACdC,sBAAUC,KADI,EACI,CADJ,iCAEdD,sBAAUE,IAFI,EAEG,CAFH,gBAAjB;;AAKA,UAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAASC,MAAT;AAAA,eACfA,MAAM,KAAKP,GAAG,GAAE,CAAhB,IAAqBM,MAAM,KAAKT,GAAG,GAAG,CAAvC,IACGU,MAAM,KAAKP,GAAX,IAAkBM,MAAM,KAAKT,GAAG,GAAG,CADtC,IAEGU,MAAM,KAAKP,GAAG,GAAG,CAAjB,IAAsBM,MAAM,KAAKT,GAAG,GAAG,CAH1B;AAAA,OAAlB;;AAMA,UAAMW,SAAS,GAAG,SAAZA,SAAY,CAACF,MAAD,EAASC,MAAT;AAAA,eACfA,MAAM,KAAKP,GAAG,GAAE,CAAhB,IAAqBM,MAAM,KAAKT,GAAG,GAAG,CAAvC,IACKU,MAAM,KAAKP,GAAX,IAAkBM,MAAM,KAAKT,GAAG,GAAG,CADxC,IAEKU,MAAM,KAAKP,GAAG,GAAG,CAAjB,IAAsBM,MAAM,KAAKT,GAAG,GAAG,CAH5B;AAAA,OAAlB;;AAMA,UAAMY,QAAQ,GAAG,SAAXA,QAAW,CAACH,MAAD,EAASC,MAAT;AAAA,eACdA,MAAM,KAAKP,GAAG,GAAE,CAAhB,IAAqBM,MAAM,IAAIT,GAAhC,IACKU,MAAM,KAAKP,GAAG,GAAG,CAAjB,IAAsBM,MAAM,KAAKT,GAFvB;AAAA,OAAjB;;AAKD,UAAIa,YAAY,GAAG,CAAnB;AAEA,WAAKlB,KAAL,CAAWmB,OAAX,CAAmB,UAACC,OAAD,EAAUN,MAAV,EAAqB;AACtCM,QAAAA,OAAO,CAACD,OAAR,CAAgB,UAACE,IAAD,EAAON,MAAP,EAAkB;AAChC,cAAGF,SAAS,CAACC,MAAD,EAASC,MAAT,CAAT,IACCE,QAAQ,CAACH,MAAD,EAASC,MAAT,CADT,IAECC,SAAS,CAACF,MAAD,EAASC,MAAT,CAFb,EAE8B;AAC5BG,YAAAA,YAAY,IAAIT,WAAW,CAACY,IAAI,CAACrB,KAAN,CAA3B;AACD;AACF,SAND;AAOD,OARD;AAUA,aAAOkB,YAAP;AACA;;;gCAEW;AAAA;;AACV,WAAKlB,KAAL,GAAa,KAAKA,KAAL,CAAWI,GAAX,CAAe,UAACC,GAAD,EAAMS,MAAN;AAAA,eAAiBT,GAAG,CAACD,GAAJ,CAAQ,UAACiB,IAAD,EAAON,MAAP;AAAA,iBAAkB,IAAIR,gBAAJ,CAASc,IAAI,CAACC,YAAL,CAAkB,KAAI,CAACC,sBAAL,CAA4BT,MAA5B,EAAoCC,MAApC,CAAlB,CAAT,CAAlB;AAAA,SAAR,CAAjB;AAAA,OAAf,CAAb;AACD",
      "sourceRoot": "/Users/katiemcdonagh/react/gameOfLife/",
      "sourcesContent": [
        "import Cell from \"./Cell\";\nimport CellState from './CellState';\n\nexport default class Game {\n  constructor(state){\n    this.numRows = state.length\n    this.numCols = state[0].length\n    this.state = state.map(row => row.map(cellState => new Cell(cellState)));\n  }\n\n  getCell(row, col){\n    return this.state[row][col];\n  }\n\n  getNumOfAliveNeighbors(row, col) {\n\n    const stateValues = {\n      [CellState.ALIVE]: 1,\n      [CellState.DEAD]: 0,\n    };\n\n    const cellAbove = (rowNum, colNum) => (\n      (colNum === col -1 && rowNum === row - 1)\n      ||(colNum === col && rowNum === row - 1)\n      ||(colNum === col + 1 && rowNum === row - 1)\n    );\n\n    const cellBelow = (rowNum, colNum) => (\n      (colNum === col -1 && rowNum === row + 1)\n        ||(colNum === col && rowNum === row + 1)\n        ||(colNum === col + 1 && rowNum === row + 1)\n    );\n\n    const cellNext = (rowNum, colNum) => (\n      (colNum === col -1 && rowNum == row)\n        ||(colNum === col + 1 && rowNum === row)\n    )\n\n   let numNeighbors = 0;\n\n   this.state.forEach((cellRow, rowNum) => {\n     cellRow.forEach((cell, colNum) => {\n       if(cellAbove(rowNum, colNum) \n        || cellNext(rowNum, colNum) \n        || cellBelow(rowNum, colNum)){\n         numNeighbors += stateValues[cell.state];\n       } \n     });\n   });\n\n   return numNeighbors\n  }\n\n  nextState() {\n    this.state = this.state.map((row, rowNum) => row.map((cell, colNum) => new Cell(cell.getNextState(this.getNumOfAliveNeighbors(rowNum, colNum)))));\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1598042814483
  }
}